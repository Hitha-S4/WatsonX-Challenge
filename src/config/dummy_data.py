from datetime import date
from src.models.task import Task
from src.models.story import Story
from src.models.leave import Leave
from src.models.epic import Epic

DUMMY_STORY_DATA = [
    Story(
        issue_id="",
        title="Research Agentic Frameworks",
        description="Understanding different agentic frameworks and their applications",
        assignee="EMP001",
        epic="POC",
        estimate=2,
        sprint="",
    ),
    Story(
        issue_id="",
        title="Evaluate Langraph Framework",
        description="Pros and cons of different frameworks and why Langraph",
        assignee="EMP002",
        epic="POC",
        estimate=2,
        sprint="",
    ),
    Story(
        issue_id="",
        title="Understand Langraph Capabilities",
        description="Understanding Langraph and its features",
        assignee="EMP001",
        epic="POC",
        estimate=1,
        sprint="",
    ),
    Story(
        issue_id="",
        title="Assess Feasibility and Licensing",
        description="Feasibility and licensing of Langraph framework",
        assignee="EMP002",
        epic="POC",
        estimate=1,
        sprint="",
    ),
    Story(
        issue_id="",
        title="Research Alternative Frameworks",
        description="Research alternative frameworks for comparison",
        assignee="EMP002",
        epic="POC",
        estimate=2,
        sprint="",
    ),
    Story(
        issue_id="",
        title="Compare Performance Benchmarks",
        description="Compare performance benchmarks of different frameworks",
        assignee="EMP002",
        epic="POC",
        estimate=2,
        sprint="",
    ),
    Story(
        issue_id="PPA-1",
        title="Create high-level diagram",
        description="Create a high-level diagram to visualize the overall system architecture",
        assignee="EMP001",
        epic="Design Document",
        estimate=2,
        sprint="Sprint 1",
    ),
    Story(
        issue_id="PPA-2",
        title="Create low-level diagram",
        description="Create a low-level diagram to visualize the detailed system architecture",
        assignee="EMP003",
        epic="Design Document",
        estimate=3,
        sprint="Sprint 1",
    ),
    Story(
        issue_id="PPA-3",
        title="Create class diagram",
        description="Create a class diagram to visualize the system's class structure",
        assignee="EMP003",
        epic="Design Document",
        estimate=2,
        sprint="Sprint 1",
    ),
    Story(
        issue_id="PPA-4",
        title="Define models to be used",
        description="Define the models to be used in the system",
        assignee="EMP003",
        epic="Design Document",
        estimate=1,
        sprint="Sprint 1",
    ),
    Story(
        issue_id="PPA-5",
        title="Define API contracts",
        description="Define the API contracts for the system",
        assignee="EMP004",
        epic="Design Document",
        estimate=2,
        sprint="Sprint 1",
    ),
    Story(
        issue_id="PPA-6",
        title="Document edge cases",
        description="Document the edge cases for the system",
        assignee="EMP004",
        epic="Design Document",
        estimate=1,
        sprint="Sprint 1",
    ),
    Story(
        issue_id="PPA-1",
        title="Create a graph",
        description="Create a graph to represent the project structure",
        assignee="EMP004",
        epic="Langraph",
        estimate=3,
        sprint="Sprint 1",
    ),
    Story(
        issue_id="PPA-2",
        title="Create nodes",
        description="Create nodes to represent tasks and subtasks in the graph",
        assignee="EMP004",
        epic="Langraph",
        estimate=2,
        sprint="Sprint 1",
    ),
    Story(
        issue_id="PPA-3",
        title="Build agents",
        description="Build AI agents to streamline project planning and task allocation",
        assignee="EMP004",
        epic="Langraph",
        estimate=5,
        sprint="Sprint 2",
    ),
    Story(
        issue_id="PPA-4",
        title="Build agentic tools",
        description="Build tools to support AI agents in task allocation and sprint planning",
        assignee="EMP005",
        epic="Langraph",
        estimate=4,
        sprint="Sprint 2",
    ),
    Story(
        issue_id="PPA-5",
        title="Optimize execution flow",
        description="Optimize the execution flow of tasks and subtasks in the project",
        assignee="EMP005",
        epic="Langraph",
        estimate=3,
        sprint="Sprint 3",
    ),
    Story(
        issue_id="PPA-6",
        title="Test error handling mechanisms",
        description="Test error handling mechanisms to ensure robustness of the project planner agent",
        assignee="EMP005",
        epic="Langraph",
        estimate=2,
        sprint="Sprint 3",
    ),
    Story(
        issue_id="",
        title="Integrate with Slack",
        description="Integrate the project planner agent with Slack to enable seamless communication and workflow management",
        assignee="EMP005",
        epic="Jira",
        estimate=3,
        sprint="",
    ),
    Story(
        issue_id="",
        title="Implement Slack notification",
        description="Send notifications to team members through Slack for updates and changes in the project",
        assignee="EMP001",
        epic="Jira",
        estimate=2,
        sprint="",
    ),
    Story(
        issue_id="",
        title="Automate sprint creation",
        description="Create a new sprint after each sprint completion to ensure continuous workflow and project progression",
        assignee="EMP001",
        epic="Jira",
        estimate=1,
        sprint="",
    ),
    Story(
        issue_id="",
        title="Automate deployment pipeline",
        description="Automate the deployment process to reduce manual effort and increase efficiency",
        assignee="EMP001",
        epic="Jira",
        estimate=4,
        sprint="",
    ),
    Story(
        issue_id="",
        title="Schedule automated reports",
        description="Schedule automated reports to track project progress and provide insights for future improvements",
        assignee="",
        epic="Jira",
        estimate=3,
        sprint="",
    ),
]

EPIC_LIST = [
    {
        "epic_id": "",
        "title": "POC",
        "description": "Proof of concept for the project",
        "stories": [
            {
                "issue_id": "",
                "title": "Research Agentic Frameworks",
                "description": "Understanding different agentic frameworks and their applications",
                "assignee": "",
                "epic": "",
                "estimate": 2,
                "sprint": "",
            },
            {
                "issue_id": "",
                "title": "Evaluate Langraph Framework",
                "description": "Pros and cons of different frameworks and why Langraph",
                "assignee": "",
                "epic": "",
                "estimate": 2,
                "sprint": "",
            },
            {
                "issue_id": "",
                "title": "Understand Langraph Capabilities",
                "description": "Understanding Langraph and its features",
                "assignee": "",
                "epic": "",
                "estimate": 1,
                "sprint": "",
            },
            {
                "issue_id": "",
                "title": "Assess Feasibility and Licensing",
                "description": "Feasibility and licensing of Langraph framework",
                "assignee": "",
                "epic": "",
                "estimate": 1,
                "sprint": "",
            },
            {
                "issue_id": "",
                "title": "Research Alternative Frameworks",
                "description": "Research alternative frameworks for comparison",
                "assignee": "",
                "epic": "",
                "estimate": 2,
                "sprint": "",
            },
            {
                "issue_id": "",
                "title": "Compare Performance Benchmarks",
                "description": "Compare performance benchmarks of different frameworks",
                "assignee": "",
                "epic": "",
                "estimate": 2,
                "sprint": "",
            },
        ],
    },
    {
        "epic_id": "",
        "title": "Design document",
        "description": "Create a detailed design document for the project",
        "stories": [
            {
                "issue_id": "PPA-1",
                "title": "Create high-level diagram",
                "description": "Create a high-level diagram to visualize the overall system architecture",
                "assignee": "John Doe",
                "epic": "Design Document",
                "estimate": 2,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-2",
                "title": "Create low-level diagram",
                "description": "Create a low-level diagram to visualize the detailed system architecture",
                "assignee": "John Doe",
                "epic": "Design Document",
                "estimate": 3,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-3",
                "title": "Create class diagram",
                "description": "Create a class diagram to visualize the system's class structure",
                "assignee": "John Doe",
                "epic": "Design Document",
                "estimate": 2,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-4",
                "title": "Define models to be used",
                "description": "Define the models to be used in the system",
                "assignee": "John Doe",
                "epic": "Design Document",
                "estimate": 1,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-5",
                "title": "Define API contracts",
                "description": "Define the API contracts for the system",
                "assignee": "John Doe",
                "epic": "Design Document",
                "estimate": 2,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-6",
                "title": "Document edge cases",
                "description": "Document the edge cases for the system",
                "assignee": "John Doe",
                "epic": "Design Document",
                "estimate": 1,
                "sprint": "Sprint 1",
            },
        ],
    },
    {
        "epic_id": "",
        "title": "Langraph",
        "description": "Develop the language graph for the project",
        "stories": [
            {
                "issue_id": "PPA-1",
                "title": "Create a graph",
                "description": "Create a graph to represent the project structure",
                "assignee": "John Doe",
                "epic": "Project Planner Agent",
                "estimate": 3,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-2",
                "title": "Create nodes",
                "description": "Create nodes to represent tasks and subtasks in the graph",
                "assignee": "John Doe",
                "epic": "Project Planner Agent",
                "estimate": 2,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-3",
                "title": "Build agents",
                "description": "Build AI agents to streamline project planning and task allocation",
                "assignee": "Jane Doe",
                "epic": "Project Planner Agent",
                "estimate": 5,
                "sprint": "Sprint 2",
            },
            {
                "issue_id": "PPA-4",
                "title": "Build agentic tools",
                "description": "Build tools to support AI agents in task allocation and sprint planning",
                "assignee": "Jane Doe",
                "epic": "Project Planner Agent",
                "estimate": 4,
                "sprint": "Sprint 2",
            },
            {
                "issue_id": "PPA-5",
                "title": "Optimize execution flow",
                "description": "Optimize the execution flow of tasks and subtasks in the project",
                "assignee": "John Doe",
                "epic": "Project Planner Agent",
                "estimate": 3,
                "sprint": "Sprint 3",
            },
            {
                "issue_id": "PPA-6",
                "title": "Test error handling mechanisms",
                "description": "Test error handling mechanisms to ensure robustness of the project planner agent",
                "assignee": "Jane Doe",
                "epic": "Project Planner Agent",
                "estimate": 2,
                "sprint": "Sprint 3",
            },
        ],
    },
    {
        "epic_id": "",
        "title": "Jira",
        "description": "Set up and configure Jira for the project",
        "stories": [
            {
                "issue_id": "PPA-1",
                "title": "Create API to create an epic",
                "description": "Develop an API to create an epic in Jira",
                "assignee": "John Doe",
                "epic": "Project Planner Agent",
                "estimate": 3,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-2",
                "title": "Create API to assign issues to an epic",
                "description": "Develop an API to assign issues to an epic in Jira",
                "assignee": "John Doe",
                "epic": "Project Planner Agent",
                "estimate": 2,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-3",
                "title": "Assign persons to the stories",
                "description": "Develop a feature to assign persons to the stories in Jira",
                "assignee": "John Doe",
                "epic": "Project Planner Agent",
                "estimate": 2,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-4",
                "title": "Automate status updates",
                "description": "Develop a feature to automate status updates in Jira",
                "assignee": "Jane Doe",
                "epic": "Project Planner Agent",
                "estimate": 3,
                "sprint": "Sprint 2",
            },
            {
                "issue_id": "PPA-5",
                "title": "Generate reports",
                "description": "Develop a feature to generate reports in Jira",
                "assignee": "Jane Doe",
                "epic": "Project Planner Agent",
                "estimate": 3,
                "sprint": "Sprint 2",
            },
        ],
    },
    {
        "epic_id": "",
        "title": "Testing",
        "description": "Perform testing for the project",
        "stories": [
            {
                "issue_id": "PPA-1",
                "title": "Unit Testing (UT) for Project Planner Agent",
                "description": "Perform unit testing to ensure individual components of the Project Planner Agent are functioning as expected",
                "assignee": "John Doe",
                "epic": "Testing",
                "estimate": 2,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-2",
                "title": "Functional Verification Testing (FVT) for Project Planner Agent",
                "description": "Perform functional verification testing to ensure the Project Planner Agent meets the required functionality",
                "assignee": "John Doe",
                "epic": "Testing",
                "estimate": 3,
                "sprint": "Sprint 1",
            },
            {
                "issue_id": "PPA-3",
                "title": "Integration Verification Testing (IVT) for Project Planner Agent",
                "description": "Perform integration verification testing to ensure the Project Planner Agent integrates well with other components",
                "assignee": "John Doe",
                "epic": "Testing",
                "estimate": 3,
                "sprint": "Sprint 2",
            },
            {
                "issue_id": "PPA-4",
                "title": "Performance Testing for Project Planner Agent",
                "description": "Perform performance testing to ensure the Project Planner Agent meets the required performance standards",
                "assignee": "John Doe",
                "epic": "Testing",
                "estimate": 2,
                "sprint": "Sprint 2",
            },
            {
                "issue_id": "PPA-5",
                "title": "Security Testing for Project Planner Agent",
                "description": "Perform security testing to ensure the Project Planner Agent is secure and meets the required security standards",
                "assignee": "John Doe",
                "epic": "Testing",
                "estimate": 1,
                "sprint": "Sprint 3",
            },
        ],
    },
    {
        "epic_id": "",
        "title": "Automation",
        "description": "Automate tasks for the project",
        "stories": [
            {
                "issue_id": "",
                "title": "Integrate with Slack",
                "description": "Integrate the project planner agent with Slack to enable seamless communication and workflow management",
                "assignee": "",
                "epic": "",
                "estimate": 3,
                "sprint": "",
            },
            {
                "issue_id": "",
                "title": "Implement Slack notification",
                "description": "Send notifications to team members through Slack for updates and changes in the project",
                "assignee": "",
                "epic": "",
                "estimate": 2,
                "sprint": "",
            },
            {
                "issue_id": "",
                "title": "Automate sprint creation",
                "description": "Create a new sprint after each sprint completion to ensure continuous workflow and project progression",
                "assignee": "",
                "epic": "",
                "estimate": 1,
                "sprint": "",
            },
            {
                "issue_id": "",
                "title": "Automate deployment pipeline",
                "description": "Automate the deployment process to reduce manual effort and increase efficiency",
                "assignee": "",
                "epic": "",
                "estimate": 4,
                "sprint": "",
            },
            {
                "issue_id": "",
                "title": "Schedule automated reports",
                "description": "Schedule automated reports to track project progress and provide insights for future improvements",
                "assignee": "",
                "epic": "",
                "estimate": 3,
                "sprint": "",
            },
        ],
    },
]

DUMMY_EPIC_DATA = [Epic(**epic) for epic in EPIC_LIST]
